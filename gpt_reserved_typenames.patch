commit a8de2477b972c72fad9097cf9992739ae2394ee7
Author: Vince Rich <mosfet@nospam.org>
Date:   Wed May 4 01:25:16 2016 +0200

    Add reserved guid type names

diff --git a/libblkid/samples/partitions.c b/libblkid/samples/partitions.c
index 318e9db..ffe2461 100644
--- a/libblkid/samples/partitions.c
+++ b/libblkid/samples/partitions.c
@@ -86,6 +86,9 @@ int main(int argc, char *argv[])
 		p = blkid_partition_get_type_string(par);
 		if (p)
 			printf(" type='%s'", p);
+		p = blkid_partition_get_type_name(par);
+		if (p)
+			printf(" type_name='%s'", p);
 
 		putc('\n', stdout);
 	}
diff --git a/libblkid/src/partitions/gpt.c b/libblkid/src/partitions/gpt.c
index 01b739f..2567c5c 100644
--- a/libblkid/src/partitions/gpt.c
+++ b/libblkid/src/partitions/gpt.c
@@ -41,10 +41,67 @@ typedef struct {
 	uint8_t node[6];
 } efi_guid_t;
 
+typedef struct {
+	char		typestr[37];
+	char		type_name[128];
+} efi_reserved_guid_t;
+
+static efi_reserved_guid_t 
+known_guids[] = 
+{
+	{ "024dee41-33e7-11d3-9d69-0008c781f39f", "MBR partition scheme" },
+	{ "c12a7328-f81f-11d2-ba4b-00a0c93ec93b", "EFI system partition" },
+	{ "21686148-6449-6e6f-744e-656564454649", "BIOS boot partition" },
+	{ "d3bfe2de-3daf-11df-ba40-e3a556d89593", "Intel Fast Flash partition" },
+	{ "f4019732-066e-4e12-8273-346c5641494f", "Sony boot partition" },
+	{ "bfbfafe7-a34f-448a-9a5b-6213eb736c22", "Lenovo boot partition" },
+	{ "e3c9e316-0b5c-4db8-817d-f92df00215ae", "Microsoft reserved partition" },
+	{ "ebd0a0a2-b9e5-4433-87c0-68b6b72699c7", "Basic data partition" },
+	{ "5808c8aa-7e8f-42e0-85d2-e1e90434cfb3", "Logical Disk Manager metadata partition" },
+	{ "af9b60a0-1431-4f62-bc68-3311714a69ad", "Logical Disk Manager data partition" },
+	{ "de94bba4-06d1-4d40-a16a-bfd50179d6ac", "Windows Recovery Environment partition" }, //IBM General Parallel File System (GPFS) partition
+	{ "37affc90-ef7d-4e96-91c3-2d7ae055b174", "IBM General Parallel File System partition" },
+	{ "e75caf8f-f680-4cee-afa3-b001e56efc2d", "Storage Spaces partition" },
+	{ "75894c1e-3aeb-11d3-b7c1-7b03a0000000", "HP-UX data partition" },
+	{ "e2a1e728-32e3-11d6-a682-7b03a0000000", "HP-UX service partition" },
+	{ "0fc63daf-8483-4772-8e79-3d69d8477de4", "Linux filesystem data" },
+	{ "a19d880f-05fc-4d3b-a006-743f0f84911e", "Linux RAID partition" },
+	{ "44479540-f297-41b2-9af7-d131d5f0458a", "Linux root partition (x86)" },
+	{ "4f68bce3-e8cd-4db1-96e7-fbcaf984b709", "Linux root partition (x86-64)" },
+	{ "69dad710-2ce4-4e3c-b16c-21a1d49abed3", "Linux root partition (32-bit ARM)" },
+	{ "b921b045-1df0-41c3-af44-4c6f280d3fae", "Linux root partition (64-bit ARM/AArch64)" },
+	{ "0657fd6d-a4ab-43c4-84e5-0933c84b4f4f", "Linux swap partition" },
+	{ "e6d6d379-f507-44c2-a23c-238f2a3df928", "Linux LVM partition" },
+	{ "933ac7e1-2eb4-4f13-b844-0e14e2aef915", "Linux home partition" },
+	{ "3b8f8425-20e0-4f3b-907f-1a25a76f98e8", "Linux srv partition" },
+	{ "7ffec5c9-2d00-49b7-8941-3ea10a5586b7", "Linux plain dm-crypt partition" },
+	{ "ca7d7ccb-63ed-4c53-861c-1742536059cc", "Linux LUKS partition" },
+	{ "8da63339-0007-60c0-c436-083ac8230908", "Linux reserved partition" },
+	{ "83bd6b9d-7f41-11dc-be0b-001560b84f0f", "FreeBSD boot partition" },
+	{ "516e7cb4-6ecf-11d6-8ff8-00022d09712b", "FreeBSD data partition" },
+	{ "516e7cb5-6ecf-11d6-8ff8-00022d09712b", "FreeBSD swap partition" },
+	{ "516e7cb6-6ecf-11d6-8ff8-00022d09712b", "FreeBSD UFS partition" },
+	{ "516e7cb8-6ecf-11d6-8ff8-00022d09712b", "FreeBSD Vinum volume manager partition" },
+	{ "516e7cba-6ecf-11d6-8ff8-00022d09712b", "FreeBSD ZFS partition" },
+	{ "48465300-0000-11aa-aa11-00306543ecac", "Apple HFS+ partition" },
+	{ "55465300-0000-11aa-aa11-00306543ecac", "Apple UFS partition" },
+	{ "6a898cc3-1dd2-11b2-99a6-080020736631", "Apple ZFS partition" },
+	{ "52414944-0000-11aa-aa11-00306543ecac", "Apple RAID partition" },
+	{ "52414944-5f4f-11aa-aa11-00306543ecac", "Apple RAID partition, offline" },
+	{ "426f6f74-0000-11aa-aa11-00306543ecac", "Apple boot partition (Recovery HD)" },
+	{ "4c616265-6c00-11aa-aa11-00306543ecac", "Apple Label" },
+	{ "5265636f-7665-11aa-aa11-00306543ecac", "Apple TV recovery partition" },
+	{ "53746f72-6167-11aa-aa11-00306543ecac", "Apple Core Storage (i.e. Lion FileVault) partition" }
+	/* TO BE CONTINUED */
+};
 
 #define GPT_UNUSED_ENTRY_GUID \
 	    ((efi_guid_t) { 0x00000000, 0x0000, 0x0000, 0x00, 0x00, \
 	                    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }})
+
+#ifdef _MSC_VER
+# pragma pack (1)
+#endif
 struct gpt_header {
 	uint64_t	signature;		/* "EFI PART" */
 	uint32_t	revision;
@@ -76,6 +133,9 @@ struct gpt_header {
 	 * only.
 	 */
 } __attribute__ ((packed));
+#ifdef _MSC_VER
+# pragma pack ()
+#endif
 
 /*** not used
 struct gpt_entry_attributes {
@@ -402,6 +462,15 @@ static int probe_gpt_pt(blkid_probe pr,
 		swap_efi_guid(&guid);
 		blkid_partition_set_type_uuid(par, (const unsigned char *) &guid);
 
+		for (i = 0; i < (sizeof(known_guids) / sizeof(known_guids[0])); i++) {
+			if (!strcmp(blkid_partition_get_type_string(par), known_guids[i].typestr)) {
+				blkid_partition_set_type_name(par, 
+					known_guids[i].type_name, 
+					sizeof(known_guids[i].type_name));
+			}
+		}
+
+
 		blkid_partition_set_flags(par, le64_to_cpu(e->attributes));
 	}
 
diff --git a/libblkid/src/partitions/partitions.c b/libblkid/src/partitions/partitions.c
index bc67e80..2c3d18b 100644
--- a/libblkid/src/partitions/partitions.c
+++ b/libblkid/src/partitions/partitions.c
@@ -178,12 +178,14 @@ struct blkid_struct_partition {
 
 	int		type;		/* partition type */
 	char		typestr[37];	/* partition type string (GPT and Mac) */
+	char	type_name[128];
 
 	unsigned long long flags;	/* partition flags / attributes */
 
 	int		partno;		/* partition number */
 	char		uuid[37];	/* UUID (when supported by PT), e.g GPT */
 	unsigned char	name[128];	/* Partition in UTF8 name (when supporte by PT), e.g. Mac */
+	
 
 	blkid_parttable	tab;		/* partition table */
 };
@@ -1468,6 +1470,23 @@ int blkid_partition_set_type_uuid(blkid_partition par, const unsigned char *uuid
 	return 0;
 }
 
+int blkid_partition_set_type_name(blkid_partition par,
+	const unsigned char *type_name, size_t len)
+{
+	if (!par)
+		return -1;
+
+	set_string((unsigned char *)par->type_name,
+		sizeof(par->type_name), type_name, len);
+
+	return 0;
+}
+
+const char *blkid_partition_get_type_name(blkid_partition par)
+{
+	return par && *par->type_name ? par->type_name : NULL;
+}
+
 /**
  * blkid_partition_get_type_string:
  * @par: partition
diff --git a/libblkid/src/partitions/partitions.h b/libblkid/src/partitions/partitions.h
index 7ec03b2..aa1f2a5 100644
--- a/libblkid/src/partitions/partitions.h
+++ b/libblkid/src/partitions/partitions.h
@@ -50,6 +50,9 @@ extern int blkid_partition_set_type_string(blkid_partition par,
 extern int blkid_partition_set_type_uuid(blkid_partition par,
 		const unsigned char *uuid);
 
+extern int blkid_partition_set_type_name(blkid_partition par,
+                const unsigned char *type, size_t len);
+
 extern int blkid_partition_set_flags(blkid_partition par, unsigned long long flags);
 
 /*
